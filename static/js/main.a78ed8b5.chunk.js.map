{"version":3,"sources":["Components/Footer.js","Components/Navbar.js","Components/Pagination.js","Components/TextForms.js","Components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","props","id","className","Navbar","elementmode","href","title","type","home","about","placeholder","onClick","togglemode","role","htmlFor","defaultProps","Pagination","TextForms","useState","text","setText","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","toLowerCase","split","join","showAlert","document","getElementById","select","navigator","clipboard","writeText","length","Alerts","alert","word","lower","charAt","slice","capitalize","message","App","btntext","setbtntext","setelementmode","setAlert","setTimeout","backgroundColor","myStyle","setmyStyle","color","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a78ed8b5.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Footer.css\"\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <div>\r\n            <div id='footer' className=\"navbar navbar-dark bg-dark\">\r\n            <p  id='copyright'  >â’¸ copyright 2021 ______SU</p>\r\n            <p  id='copyright-shan'  >SHAN</p>\r\n            <p  id='copyright'  >T Phalke </p>\r\n            <p  id='copyright3334'  >__________SWANS_3334</p>\r\n            </div>\r\n            \r\n            </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Navbar.css\";\r\nimport \"./About\";\r\n// import { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div className='my-1'>\r\n             <nav className={`navbar fixed-top navbar-expand-lg navbar-${props.elementmode} bg-${props.elementmode}`}>\r\n            <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item active\">\r\n                  <a className=\"nav-link\" href=\"/\">{props.home}</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href='/'>{props.about}</a>\r\n                </li>\r\n              </ul>\r\n              \r\n              <form className=\"d-flex\">\r\n                <input className={`form-control me-2 bg-${props.elementmode}`} type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n              </form>\r\n                <div id=\"darkmodeswitch\" className=\"form-check form-switch mx-3\" >\r\n                  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                </div>\r\n                </div>\r\n          </nav>\r\n        </div>\r\n    )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string,\r\n                    home: PropTypes.string,\r\n                    about: PropTypes.string,}\r\n\r\nNavbar.defaultProps= {\r\n                      title : \" TextEditor\",\r\n                      home : \"Home\",\r\n                      about : \"About\"}\r\n","import React from 'react'\r\nimport \"./Pagination.css\"\r\nexport default function Pagination(props) {\r\n    return (\r\n        <div >\r\n            <nav aria-label=\"Page navigation example\">\r\n  <ul className=\"pagination justify-content-center\">\r\n    <li className=\"page-item\">\r\n      <a className={`page-link page-link-${props.elementmode} bg-${props.elementmode}`} href=\"/\" aria-label=\"Previous\">\r\n        <span aria-hidden=\"true\">&laquo;</span>\r\n      </a>\r\n    </li>\r\n    <li className=\"page-item\"><a className={`page-link page-link-${props.elementmode} bg-${props.elementmode}`} href=\"/\">refresh</a></li>\r\n    {/* <li className=\"page-item\"><a className={`page-link page-link-${props.elementmode} bg-${props.elementmode}`} href=\"/\">2</a></li>\r\n    <li className=\"page-item\"><a className={`page-link page-link-${props.elementmode} bg-${props.elementmode}`} href=\"/\">3</a></li> */}\r\n    <li className=\"page-item\">\r\n      <a className={`page-link page-link-${props.elementmode} bg-${props.elementmode}`} href=\"/\" aria-label=\"Next\">\r\n        <span aria-hidden=\"true\">&raquo;</span>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState}from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"./TextForms.css\"\r\nexport default function TextForms(props) {\r\n    const[text, setText]= useState(\"Enter text here...\");\r\n  \r\n    \r\n    const handleupclicked = ()=>{\r\n        console.log(\"click on convert to uppercase \");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n      \r\n        \r\n      \r\n    }\r\n    const handleLowclicked = ()=>{\r\n        console.log(\"click on convert to lowercase\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n       \r\n      \r\n    }\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"clicked on textbox\");\r\n        setText(event.target.value);\r\n        \r\n        \r\n    }\r\n    const handleCleartextbox = (event)=>{\r\n        console.log(\"clicked on clear textbox\");\r\n        setText(\"\");\r\n        props.showAlert(\"textbox cleared\",\"success\");   \r\n    }\r\n    const handleCopy=()=>{\r\n            console.log(\"text copied to clipboard\")\r\n            var text = document.getElementById(\"textbox\");\r\n            text.select();\r\n            navigator.clipboard.writeText(text.value);\r\n            props.showAlert(\" copied to clipboard\",\"success\")\r\n    }\r\n    const handleExtraspaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces cleared\",\"success\");\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <div id='textboxandbuttons' className={`container  container-${props.elementmode} bg-${props.elementmode}`}> \r\n            <h3>{props.heading}</h3>\r\n            <div className=\"mb-3\">\r\n            <textarea className={`form-control bg-${props.elementmode} text-${props.elementmode===\"light\"?\"dark\":\"light\"} `}  id=\"textbox\"  value={text} onChange={handleOnChange} rows=\"7\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-success mx-2 my-2\" onClick={handleupclicked}>Convert To UPPERCASE</button>\r\n            <button className=\"btn btn-success mx-2 my-2\" onClick={handleLowclicked}>Convert To lowercase</button>\r\n            <button className=\"btn btn-success mx-2 my-2\" onClick={handleExtraspaces}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCleartextbox}>Clear TextBox</button>\r\n            </div>\r\n            <div className='container my-5'>\r\n            <h3>Your Text Summary</h3>   \r\n            <p id='textsummary'> {text.length>0?text.split(' ').length:0} Words , {text.length} characters and it will take approx. {text.length * 0.0012} minutes. </p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0?text:'Enter your text in textbox to preview...'}</p>        \r\n            </div>\r\n            </>\r\n    )\r\n}\r\nTextForms.propTypes= {title: PropTypes.string}\r\nTextForms.defaultProps= {title: \"Enter Your Text here...\"}","import React from 'react'\r\n\r\nexport default function Alerts(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n         props.alert && <div className={`alert alert-${props.alert.type} alert-dismisible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.message}\r\n            </div>\r\n           \r\n        \r\n    )\r\n}\r\n\r\n","import './App.css';\nimport About from './Components/About';\nimport Corousel from './Components/Corousel';\nimport Footer from './Components/Footer';\nimport Navbar from './Components/Navbar';\nimport Pagination from './Components/Pagination';\nimport TextForms from './Components/TextForms';\nimport Verticalbuttons from './Components/Verticalbuttons';\nimport {useState} from 'react';\nimport Alerts from './Components/Alerts';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n  \n// } from \"react-router-dom\";\n\nfunction App() {\n  const[btntext, setbtntext] = useState(\"Enable dark mode\");\n  const[elementmode, setelementmode] = useState(\"light\");\n  const[alert,setAlert ] = useState(null);\n\n\n  const showAlert = (message,type)=>{\n   setAlert({\n      message : message,\n      type:type \n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 2000);\n  }\n\n  const[myStyle, setmyStyle] = useState({\n    backgroundColor:'white'\n  })\n\n  const togglemode = ()=>{\n    if(myStyle.backgroundColor ==='white'){\n      setmyStyle({\n        color:'white',\n        backgroundColor:'#0f0d20',\n        \n      })\n      setbtntext(\"Enable light mode\");\n      setelementmode(\"dark\");\n      showAlert(\"Dark mode enabled\",\"success\")\n      document.title = 'TextEditor-darkmode'\n     \n    }\n    else{\n      setmyStyle({\n          \n          backgroundColor:'white'\n      })\n      setbtntext(\"Enable dark mode\");\n      setelementmode(\"light\");\n      showAlert(\"Light mode enabled\",\"success\")\n      document.title = 'TextEditor-lightmode'\n      \n    }\n}\n\n  return(\n    <>\n    {/* <Router> */}\n    <div style={myStyle}>\n\n    <div id='navbar' className='container'><Navbar title=\"TextEditor\" home = \"Home\" about = \"About\" togglemode={togglemode} elementmode={elementmode} /></div>\n    <div id=\"alerts\"><Alerts alert={alert} /></div>\n\n\n    {/* <Switch>\n          \n          <Route exact path=\"/\"> */}\n          <div id='textforms' className='container my-5'><TextForms elementmode={elementmode}  heading =\"Enter Text to Analyze....\" showAlert={showAlert}  /></div>\n          <div  id=\"pagintion\" className='container'><Pagination elementmode={elementmode} /></div>\n\n          {/* </Route>\n          <Route path='/About'> */}\n              {/* <About elementmode={elementmode}  />\n              <Corousel elementmode={elementmode} /> */}\n          {/* </Route>\n        </Switch> */}\n\n\n\n\n\n\n\n    \n\n    \n\n    \n    \n    {/* <div id =\"Verticalbuttons\" className='container'><Verticalbuttons elementmode={elementmode} /></div> */}\n    \n    <div id='bottommodebutton' className='container'><button onClick={togglemode} className=\"btn btn-primary\">{btntext}</button></div>\n\n    <div id='footer'><Footer elementmode={elementmode} /></div>\n\n</div>\n{/* </Router> */}\n </>\n  )\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}